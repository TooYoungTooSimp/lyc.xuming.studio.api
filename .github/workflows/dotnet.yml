name: Build and release

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1.8.0
      with:
        dotnet-version: 5.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: |
        dotnet publish -c Release -o ../dist-linux /p:PublishSingleFile=true -p:SelfContained=false -p:RuntimeIdentifier=linux-x64 
        dotnet publish -c Release -o ../dist-win64 /p:PublishSingleFile=true -p:SelfContained=false -p:RuntimeIdentifier=win-x64
        dotnet publish -c Release -o ../dist-win32 /p:PublishSingleFile=true -p:SelfContained=false -p:RuntimeIdentifier=win-x86
        dotnet publish -c Release -o ../dist-macos /p:PublishSingleFile=true -p:SelfContained=false -p:RuntimeIdentifier=osx-x64
    
    - name: Pack
      env:
        PROJ: lyc.xuming.studio.api
      run: |
        mv ../dist-linux $PROJ && tar cJf $PROJ.linux.tar.xz $PROJ && rm -rf $PROJ
        mv ../dist-win64 $PROJ && tar cJf $PROJ.win64.tar.xz $PROJ && rm -rf $PROJ
        mv ../dist-win32 $PROJ && tar cJf $PROJ.win32.tar.xz $PROJ && rm -rf $PROJ
        mv ../dist-macos $PROJ && tar cJf $PROJ.macos.tar.xz $PROJ && rm -rf $PROJ
    
    - name: Publish Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        assets=(*.tar.xz)
        for rel in $(gh release list | awk -F'\t' '{print$3}')
        do
          gh release delete $rel -y
        done
        git ls-remote --tags | awk '{print$2}' | xargs git push --delete origin || true
        gh release create latest "${assets[@]}" -t "Latest Release"
